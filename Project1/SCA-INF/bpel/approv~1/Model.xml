<?xml version="1.0" encoding="UTF-8"?>
<process name="approveLargeOrder" targetNamespace="http://xmlns.oracle.com/POProcessing/Project1/approveLargeOrder" xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:client="http://xmlns.oracle.com/POProcessing/Project1/approveLargeOrder" xmlns:ora="http://schemas.oracle.com/xpath/extension" xmlns:bpelx="http://schemas.oracle.com/bpel/extension" xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:ns1="http://oracle.com/sca/soapservice/CreditCardValidation/validationForCC/getStatusByCC" xmlns:bpel2="http://docs.oasis-open.org/wsbpel/2.0/process/executable" xmlns:ns2="http://xmlns.oracle.com/ns/order" xmlns:ns3="http://www.globalcompany.com/ns/CCAuthorizationService" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue" xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath" xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath" xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions" xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap" xmlns:ns4="http://xmlns.oracle.com/bpel/workflow/taskService" xmlns:task="http://xmlns.oracle.com/bpel/workflow/task" xmlns:wfcommon="http://xmlns.oracle.com/bpel/workflow/common" xmlns:wf="http://schemas.oracle.com/bpel/extensions/workflow" xmlns:ns5="http://xmlns.oracle.com/bpel/workflow/TaskEvidenceService" id="BpPrc0">

    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        PARTNERLINKS                                                      
        List of services participating in this BPEL process               
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    --> 
    <partnerLinks>
        <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
        <partnerLink name="approvelargeorder_client" partnerLinkType="client:approveLargeOrder" myRole="approveLargeOrderProvider" partnerRole="approveLargeOrderRequester"/>
        <partnerLink name="getCreditCardStatus" partnerLinkType="ns1:getCreditCardStatus" partnerRole="execute_ptt"/>
        <partnerLink name="ManualPOApproval.TaskService" partnerLinkType="ns4:TaskService" partnerRole="TaskService" myRole="TaskServiceCallbackListener"/>
    </partnerLinks>

    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        VARIABLES                                                        
        List of messages and XML documents used within this BPEL process 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <variables>
        <!-- Reference to the message passed as input during initiation -->
        <variable name="inputVariable" messageType="client:approveLargeOrderRequestMessage"/>

        <!-- Reference to the message that will be sent back to the requester during callback -->
        <variable name="outputVariable" messageType="client:approveLargeOrderResponseMessage"/>
        <variable name="invokeCCStatusService_execute_InputVariable" messageType="ns1:requestMessage"/>
        <variable name="invokeCCStatusService_execute_OutputVariable" messageType="ns1:replyMessage"/>
        <variable name="ManualPOApproval1_globalVariable" messageType="ns4:taskMessage"/>
    </variables>

    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
       ORCHESTRATION LOGIC                                               
       Set of activities coordinating the flow of messages across the    
       services integrated within this business process                  
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <sequence name="main" id="BpSeq0">
        <!-- Receive input from requestor. (Note: This maps to operation defined in approveLargeOrder.wsdl) -->
        <receive name="receiveInput" partnerLink="approvelargeorder_client" portType="client:approveLargeOrder" operation="process" variable="inputVariable" createInstance="yes" id="BpRcv0"/>
        <assign name="assignCCNumber." id="BpAss0">
            <copy>
                <from variable="inputVariable" part="payload" query="/ns2:Order/ns2:creditCardInfo/ns2:cardNumber"/>
                <to variable="invokeCCStatusService_execute_InputVariable" part="request" query="/ns3:creditcardStatusRequest/ns3:CCNumber"/>
            </copy>
            <copy>
                <from variable="inputVariable" part="payload" query="/ns2:Order"/>
                <to variable="outputVariable" part="payload" query="/ns2:Order"/>
            </copy>
        </assign>
        <invoke name="invokeCCStatusService" inputVariable="invokeCCStatusService_execute_InputVariable" outputVariable="invokeCCStatusService_execute_OutputVariable" partnerLink="getCreditCardStatus" portType="ns1:execute_ptt" operation="execute" bpelx:invokeAsDetail="no" id="BpInv0"/>
        <switch name="Switch1" id="BpSwt0">
            <case condition="bpws:getVariableData('invokeCCStatusService_execute_OutputVariable','reply','/ns3:creditcardStatus')='VALID'">
                <sequence id="BpSeq1">
                    <scope name="ManualPOApproval1" xmlns:wf="http://schemas.oracle.com/bpel/extensions/workflow" wf:key="ManualPOApproval1_globalVariable" id="BpScp0">
                        <bpelx:annotation>
                            <bpelx:pattern patternName="bpelx:workflow"/>
                            <bpelx:general>
                                <bpelx:property name="userLabel">
                                    <![CDATA[ManualPOApproval1]]>
                                </bpelx:property>
                            </bpelx:general>
                        </bpelx:annotation>
                        <variables>
                            <variable name="initiateTaskInput" messageType="ns4:initiateTaskMessage"/>
                            <variable name="initiateTaskResponseMessage" messageType="ns4:initiateTaskResponseMessage"/>
                        </variables>
                        <sequence id="BpSeq2">
                            <assign name="ManualPOApproval1_AssignTaskAttributes" id="BpAss1">
                                <copy>
                                    <from expression="number(3)"/>
                                    <to variable="initiateTaskInput" part="payload" query="/ns4:initiateTask/task:task/task:priority"/>
                                </copy>
                                <copy>
                                    <from><payload xmlns="http://xmlns.oracle.com/bpel/workflow/task">
	<Order xmlns="http://xmlns.oracle.com/ns/order"/> 
</payload></from>
                                    <to variable="initiateTaskInput" part="payload" query="/ns4:initiateTask/task:task/task:payload"/>
                                </copy>
                                <copy>
                                    <from variable="outputVariable" part="payload" query="/ns2:Order"/>
                                    <to variable="initiateTaskInput" part="payload" query="/ns4:initiateTask/task:task/task:payload/ns2:Order"/>
                                </copy>
                            </assign>
                            <invoke name="initiateTask_ManualPOApproval1" partnerLink="ManualPOApproval.TaskService" operation="initiateTask" portType="ns4:TaskService" inputVariable="initiateTaskInput" outputVariable="initiateTaskResponseMessage" id="BpInv1"/>
                            <receive name="receiveCompletedTask_ManualPOApproval1" partnerLink="ManualPOApproval.TaskService" portType="ns4:TaskServiceCallback" operation="onTaskCompleted" variable="ManualPOApproval1_globalVariable" createInstance="no" id="BpRcv1"/>
                        </sequence>
                    </scope>
                    <switch name="taskSwitch" id="BpSwt1">
                        <case condition="$ManualPOApproval1_globalVariable.payload/task:systemAttributes/task:outcome = 'REJECT'">
                            <bpelx:annotation>
                                <bpelx:pattern>Task outcome is REJECT</bpelx:pattern>
                                <bpelx:general>
                                    <bpelx:property name="userLabel">
                                        <![CDATA[Task outcome is REJECT]]>
                                    </bpelx:property>
                                </bpelx:general>
                            </bpelx:annotation>
                            <sequence id="BpSeq3">
                                <assign id="BpAss2">
                                    <copy>
                                        <from variable="ManualPOApproval1_globalVariable" part="payload" query="/task:task/task:payload/ns2:Order"/>
                                        <to variable="outputVariable" part="payload" query="/ns2:Order"/>
                                    </copy>
                                    <copy>
                                        <from variable="ManualPOApproval1_globalVariable" part="payload"/>
                                        <to variable="outputVariable" part="payload" query="/ns2:Order"/>
                                    </copy>
                                    <copy>
                                        <from expression="'rejected'"/>
                                        <to variable="outputVariable" part="payload" query="/ns2:Order/ns2:status"/>
                                    </copy>
                                </assign>
                            </sequence>
                        </case>
                        <case condition="$ManualPOApproval1_globalVariable.payload/task:systemAttributes/task:outcome = 'APPROVE'">
                            <bpelx:annotation>
                                <bpelx:pattern>Task outcome is APPROVE</bpelx:pattern>
                                <bpelx:general>
                                    <bpelx:property name="userLabel">
                                        <![CDATA[Task outcome is APPROVE]]>
                                    </bpelx:property>
                                </bpelx:general>
                            </bpelx:annotation>
                            <sequence id="BpSeq4">
                                <assign id="BpAss3">
                                    <copy>
                                        <from variable="ManualPOApproval1_globalVariable" part="payload" query="/task:task/task:payload/ns2:Order"/>
                                        <to variable="outputVariable" part="payload" query="/ns2:Order"/>
                                    </copy>
                                </assign>
                                <assign name="VAlIDAPPROVED" id="BpAss4">
                                    <copy>
                                        <from expression="'Approved'"/>
                                        <to variable="outputVariable" part="payload" query="/ns2:Order/ns2:status"/>
                                    </copy>
                                </assign>
                            </sequence>
                        </case>
                        <otherwise>
                            <sequence id="BpSeq5">
                                <assign id="BpAss5">
                                    <copy>
                                        <from variable="ManualPOApproval1_globalVariable" part="payload" query="/task:task/task:payload/ns2:Order"/>
                                        <to variable="outputVariable" part="payload" query="/ns2:Order"/>
                                    </copy>
                                    <copy>
                                        <from expression="'expired'"/>
                                        <to variable="outputVariable" part="payload" query="/ns2:Order/ns2:status"/>
                                    </copy>
                                </assign>
                            </sequence>
                        </otherwise>
                    </switch>
                </sequence>
            </case>
            <otherwise>
                <assign name="AssignInValid" id="BpAss6">
                    <copy>
                        <from expression="'invalidCreditCard'"/>
                        <to variable="outputVariable" part="payload" query="/ns2:Order/ns2:status"/>
                    </copy>
                </assign>
            </otherwise>
        </switch>
        <!-- 
          Asynchronous callback to the requester. (Note: the callback location and correlation id is transparently handled using WS-addressing.)
        -->
        <invoke name="callbackClient" partnerLink="approvelargeorder_client" portType="client:approveLargeOrderCallback" operation="processResponse" inputVariable="outputVariable" id="BpInv2"/>
    </sequence>
</process><!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Sun Aug 23 15:04:27 EET 2015
  Author:  Mohamed.Mitkees
  Type: BPEL 1.1 Process
  Purpose: Asynchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->